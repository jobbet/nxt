#!/usr/bin/env bash

#  ----------------------------------------------------------------------------
#  "THE NXT-WARE LICENSE" NXT: 13570469120032392161 (Revision: 25519)
#  j0b <gemeni@gmail.com> wrote this file. As long as you retain this notice you
#  can do whatever you want with this stuff. IF you think this stuff is worth it, 
#  you can send me NXT, my public key is above.
#  ----------------------------------------------------------------------------


# NXT-Client configuration
source "/etc/nxt/nxt.conf"

if [[ -z "$pidfile" ]] || [[ -z "$nxtuser" ]] || [[ -z "$javapath" ]] 
   [[ -z "$stdaemon" ]] || [[ -z "$client_args" ]] || [[ -z "$nicelevel" ]]
   [[ -z "$memlow" ]] || [[ -z "$memhigh" ]] || [[ -z "$nxt_int" ]] || [[ -z "$brate" ]] ||
   [[ -z "$crate" ]] || [[ -z "$limit_port" ]]; then

    echo "Missing configuration in nxt.conf.";
    exit 0
fi

function disable_traflimit {

    iprule_exist=$(/sbin/iptables -L OUTPUT -t mangle |grep 'tcp spt:7874 MARK set' |wc -l);

    echo -n "Removing bandwidht limitation rules...";

    if [[ $iprule_exist -ge 1 ]]; then

        /sbin/iptables -D OUTPUT -t mangle -p tcp --sport $limit_port -j MARK --set-mark 10 > /dev/null 2>&1 ||
            { echo "Could not remove iptables mangle rule for bandwidht limitation"; return 1; }
    fi

    # Dont care what tc says, it does not matter, and we do not have to report anything.
    tc qdisc del dev eth0 root > /dev/null 2>&1

    return 0;

}

function traflimit {

    # Setup traffic shaping

    tc qdisc add dev $nxt_int root handle 1:0 htb default 10 >/dev/null 2>&1

    tc class add dev $nxt_int parent 1:0 classid 1:10 htb rate $brate ceil $crate prio 0 >/dev/null 2>&1 ||
        { echo "Failed to set bandwidth rates: $brate, $crate." ; return 1; }

    /sbin/iptables -A OUTPUT -t mangle -p tcp --sport $limit_port -j MARK --set-mark 10 >/dev/null 2>&1 ||
        { echo "Failed to add IPTables mangle/package-tagging rule." ; return 1; }

    tc filter add dev $nxt_int parent 1:0 prio 0 protocol ip handle 10 fw flowid 1:10 >/dev/null 2>&1 ||
        { echo "Failed to assing traffic limitation rules to appropriate qdisc" ; return 1; }
    
    return 0;

}




function start {

    # Make sure that pidfile exists and is owned by nxtuser
    touch $pidfile && chown $nxtuser:$nxtuser $pidfile
    $stdaemon --start --chdir "$nxtroot" --background --chuid "$nxtuser" --nicelevel $nicelevel \
    --quiet --pidfile "$pidfile" --make-pidfile --exec "$javapath" -- $client_args 2>&1

    # Fix "waitpid". Currently waitpid can not monitor non child processes
    while ! status > /dev/null; do
        sleep 1;
    done

    if [[ "$bwlimit" == "on" ]]; then

        if disable_traflimit; then

            echo "done.";
        fi

        echo -n "Configuring bandwidht limitation...";

        if traflimit; then

            echo "done.";
        fi

    else

        disable_traflimit
    fi

    status

}


function stop {

    if status > /dev/null; then

        sync
        "$javapath" $client_args --stop 2>&1
        # Fix "waitpid". Currently waitpid can not monitor non child processes

        while status > /dev/null; do
            sleep 1;
        done
    fi

    if [[ "$bwlimit" != "on" ]]; then


        if disable_traflimit; then

            echo "done.";
        fi
    fi

    status     

}

function status {

    # We should use $stdaemon -T for process status,
    # but -T seems to not exist for older versions.
    # This is a ugly way of doing it..

    if [[ $(ps ax |grep 'nxt/start.jar' |wc -l) -ge 2 ]];  then 
        echo "NXT-Client is started.";
    else
        echo "NXT-Client is stopped."; 
        return 1;
    fi

    return 0;


}
   

case "$1" in

    start)
        start

    ;;
    stop)
        stop

    ;;
    restart)
        stop
        start

    ;;
    status)
        status

    ;;
    *)

    N=/etc/init.d/${0##*/}
    echo "Usage: $N {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
