#!/usr/bin/env bash

#  ----------------------------------------------------------------------------
#  "THE NXT-WARE LICENSE" NXT: 13570469120032392161 (Revision: 25519)
#  j0b <gemeni@gmail.com> wrote this file. As long as you retain this notice you
#  can do whatever you want with this stuff. IF you think this stuff is worth it, 
#  you can send me NXT, my public key is above.
#  ----------------------------------------------------------------------------


export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:";
export nxtroot="/usr/local/bin/nxt";

function setbin_paths {
    
    export java_bin=$(which java);
    export wget_bin=$(which wget);
    export unzip_bin=$(which unzip);
    export gpg_bin=$(which gpg);
    export shasum_bin=$(which sha256sum);

    if [[ -z "$java_bin" ]] || [[ -z "$wget_bin" ]] || [[ -z "$unzip_bin" ]] ||
       [[ -z "$gpg_bin" ]] || [[ -z "$shasum_bin" ]]; then

        return 1;
    else

        return 0;
    fi

}
   

function install_deps {


    if ! setbin_paths; then

        read -n1 -p "Missing package dependencies, would you like this script to try and install these packages? (y/n): " yesorno

        case "$yesorno" in
            y) 
                apt-get -qq -y update >/dev/null 2>&1 || 
                { echo "Error when updating apt package database. Please run apt-get update manually and rerun this script." ; exit 1; }
                apt-get -qq -y install openjdk-7-jre wget unzip gnupg coreutils >/dev/null 2>&1 ||
                { echo "Could not install package dependencies, please install these manually and rerun installation script." ; exit 1; }

                if ! setbin_paths; then
                    echo "Could not install package dependencies, these may not exist in apt repos (sources.list)."; 
                    exit 1;
                else
                    echo "Successfully installed package dependencies.";
                    return 0;
                fi
            ;;

            n)
                echo "";
                echo "Please install package dependencies manually and rerun installation script.";
                echo "apt-get install openjdk-7-jre wget unzip gnupg coreutils";

                exit 1;
            ;;

        esac

    fi

}



function install {

    if ! setbin_paths; then

        echo "Missing package dependencies. We have already validated the existense of this packages, but we failed anyway.";
        exit 1;
    fi        
        

    if [[ ! -d "$nxtroot" ]]; then

        echo -n "Creating nxt client root directory.. ";
        mkdir -p $nxtroot && echo "done." || { echo "Could not create nxt client root directory." ; exit 1;}
    fi

    if [[ "$1" != "update" ]] && [[ "$(ls $nxtroot |wc -l)" -gt 0 ]]; then

        echo "nxt client root directory contain files. If you want to overwrite this, issue an update.";
        exit 0;
    fi


    if [[ ! -d "/etc/nxt/" ]]; then

        echo -n "Creating configuration directory for nxt client.. ";
        mkdir -p /etc/nxt && echo "done." || { echo "Could not create nxt client configuration directory." ; exit 1;}
    fi


    if [[ -d "/etc/nxt/" ]] && [[ -f "nxt.conf" ]]; then

        cp nxt.conf /etc/nxt/ || { echo "Could not copy nxt.conf to nxt configuration directory" ; exit 1;}
    fi


    if ! id -u nxt >/dev/null 2>&1; then

        echo -n "Adding nxt user.. ";
        useradd -M -u 1167 -b /usr/local/bin -s /sbin/nologin nxt >/dev/null 2>&1 && echo "done." ||
        { echo "Could not add nxt user.  Add it manually after this installation has finished." && exit 1;}
    fi


    if [[ -z "$2" ]]; then

        client_version=$($wget_bin -q -O -  http://download.nxtcrypto.org | sed 's/\(>\|<\)/ /g' |awk {'print $3 '} | 
                         egrep -v "(e.zip|changelog)" |egrep '(zip$)' |sort -V | tail -n 1);
    else

        client_version=$2;
    fi
   
    echo -n "Downloading $client_version from http://download.nxtcrypto.org..";
    
    $wget_bin -P /tmp/ -q http://download.nxtcrypto.org/$client_version > /dev/null 2>&1 ||
    { echo "could not download nxt client. Exiting installation."; exit 1; }

    echo "done.";

    client_sign=$($wget_bin -q -O -  http://download.nxtcrypto.org | sed 's/\(>\|<\)/ /g' |awk {'print $3 '} | 
    grep "sha256" |grep "asc" |grep $(echo $client_version | sed 's/.zip//g'))


    if [[ -n "$client_sign" ]]; then

        echo -n "Downloading $client_version shasum signature..";
        $wget_bin -P /tmp/ -q http://download.nxtcrypto.org/$client_sign > /dev/null 2>&1 || 
        { echo "could not download nxt client shasum signature. Exiting installation." ; exit 1;}
        
        echo "done.";
    fi


    $gpg_bin --recv-keys 0xFF2A19FA > /dev/null 2>&1 || { echo "Could not recieve public key for file verification. Exiting."; exit 1; }
    
    $gpg_bin --verify /tmp/$client_sign > /dev/null 2>&1 || { echo "CRITICAL: Failed to verify the file containing sha256sum for nxt client."; exit 1; }
    
    cp nxtclient /etc/init.d/ > /dev/null 2>&1 || { echo "Could not copy nxt client init script into /etc/init.d/."; exit 1; }

    sha=$(grep "$client_version" /tmp/$client_sign | awk {'print $1'});

    if [[ -n "$sha" ]]; then

        echo -n "Verifying $shasum_bin for $client_version..";
        zip_sha=$($shasum_bin /tmp/$client_version |awk {'print $1'});

        if [[ "$sha" == "$zip_sha" ]]; then

            echo "done."

            if [[ -f "$nxtroot/webapps/root/WEB-INF/web.xml" ]]; then

                echo -n "Backing up the current version of web.xml (web.xml-$(date +%F))...";
                cp $nxtroot/webapps/root/WEB-INF/web.xml $nxtroot/webapps/root/WEB-INF/web.xml-$(date +%F) || 
                   { echo "Could not backup web.xml."; exit 1; }
                echo "done.";
            fi

            $unzip_bin -oq /tmp/$client_version -d /usr/local/bin/ && chown -R nxt:nxt $nxtroot > /dev/null 2>&1 ||
            { echo "Could not extract files into nxt client root directory."; exit 1; }

        else

            echo "CRITICAL: The shasum does not match!. Installation will not continue.";
            exit 1;
        fi
    fi

}


function update {

    if [[ -n "$1" ]]; then

        asked_version=$1;
        client_version=$($wget_bin -q -O - http://download.nxtcrypto.org |sed 's/\(>\|<\)/ /g' |
                         sed 's/"/ /g' |awk {'print $3'} |egrep '.zip$' |grep "$asked_version");

        if [[ -z "$client_version" ]]; then

            echo "$asked_version does not exist in current location.";
            exit 1;

        else

            if [[ -f "/etc/init.d/nxtclient" ]] && [[ "$(/etc/init.d/nxtclient status |grep 'started' |wc -l)" -gt 0 ]]; then

                /etc/init.d/nxtclient stop
            fi

            install update $client_version
            /etc/init.d/nxtclient start
        fi

    else

        if [[ -f "/etc/init.d/nxtclient" ]] && [[ "$(/etc/init.d/nxtclient status |grep 'started' |wc -l)" -gt 0 ]]; then

            /etc/init.d/nxtclient stop
        fi

        install update
        /etc/init.d/nxtclient start

    fi
}

case "$1" in

    install)
        if [[ -n "$2" ]]; then

            if install_deps; then

                install $2
            fi

        else
            
            if install_deps; then

                install
            fi
        fi

        echo "Installation done. Start nxt client with /etc/init.d/nxtclient start, then browse https://localhost:7875";
        echo "Be sure accept incoming tcp traffic to port 7874, else nxt client will not be able to communicate with p2p network.";

    ;;
    update)
        if [[ -n "$2" ]]; then
            
            if install_deps; then

                update $2
            fi

        else
 
            if install_deps; then

                update
            fi

        fi

        echo "Update done.";
        
    ;;

    *)

    N=${0##*/}
    echo "Usage: $N {install|update}" >&2
    exit 1
    ;;
esac

exit 0
